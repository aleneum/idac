package totem.graphic;

import processing.core.PApplet;



public class SquareVisualization implements TVisualization {

	final int H_DIM = 10;
	final int V_DIM = 10;
	final float DECAY = 0.03f;

	PApplet parent;
	
	int[][] board;
	int w,h;
	
	public SquareVisualization(PApplet aParent) {
	    // check if H_DIM and V_DIM have valid values
	    if (V_DIM < 1 || H_DIM < 1){
	      PApplet.println("FATAL: H_DIM and/or V_DIM contain invalid values");
	    }
	    
	    this.parent = aParent;
	    
	    board = new int[H_DIM][V_DIM];
	    
	    w = PApplet.parseInt(parent.width/H_DIM);
	    h = PApplet.parseInt(parent.height/V_DIM);
	    
	    // Two nested loops allow us to visit every spot in a 2D array.   
	    // For every column I, visit every row J.
	    for (int i = 0; i < H_DIM; i++) {
	      for (int j = 0; j < V_DIM; j++) {
	        board[i][j] = 0;
	      }
	    }
	}
	
	@Override
	public void draw() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void hat() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void kick() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void snare() {
		// TODO Auto-generated method stub
		
	}
	
}
